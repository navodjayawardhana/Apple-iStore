package user;

import business.*;
import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
public class UpdateDevice extends javax.swing.JFrame {

    /**
     * Creates new form UpdatedeviceUI
     */
    public UpdateDevice() {
        initComponents();
        setLocationRelativeTo(this);
        device dev = new device();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtdeviceID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtdeviceName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtqnty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnCancel1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Device ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 102, 140, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("APPLE I STORE-UPDATE DEVICE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        txtdeviceID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtdeviceID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtdeviceID, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 101, 373, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Device Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 160, 140, -1));

        txtdeviceName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtdeviceName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtdeviceName, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 159, 373, -1));

        txtPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 204, 373, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Price");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 205, 140, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Quintity");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 260, 140, -1));

        txtqnty.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtqnty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(txtqnty, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 259, 373, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Category");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 316, 140, -1));

        cmbCategory.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option", "iPhone", "Apple Watch", "iPad", "AirPods", "Mac", "Other" }));
        cmbCategory.setBorder(null);
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });
        jPanel1.add(cmbCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 324, 373, -1));

        btnUpdate.setBackground(new java.awt.Color(0, 204, 51));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 134, -1));

        btnCancel1.setBackground(new java.awt.Color(204, 255, 204));
        btnCancel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCancel1.setText("Back Main Menu");
        btnCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 400, 170, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/green clean smartphone facebook post.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, -30, 760, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(checked()&& check()){
            String deviceID =txtdeviceID.getText();
            delete(deviceID);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "All Feilds Must filled to Update Data!");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel1ActionPerformed
        this.setVisible(false);
        MenuSelect Menu = new MenuSelect ();
        Menu.setVisible(true);
    }//GEN-LAST:event_btnCancel1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDevice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDevice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtdeviceID;
    private javax.swing.JTextField txtdeviceName;
    private javax.swing.JTextField txtqnty;
    // End of variables declaration//GEN-END:variables

public void add(){
        int deviceID = Integer.valueOf(txtdeviceID.getText());
        String deviceName = txtdeviceName.getText();
        String price = txtPrice.getText();
        int qnty = Integer.valueOf(txtqnty.getText());
        String Category = cmbCategory.getSelectedItem().toString();
        
        device dk = new device(deviceID,deviceName,price,qnty,Category);
        
        try{
            BufferedWriter df = new BufferedWriter(new FileWriter("Device.txt",true));
            df.append("\n"+dk.Print());
            JOptionPane.showMessageDialog(rootPane, "Device Updated Successfuly!");
            df.close();
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }

    public void delete(String deviceID){
        String data;
        boolean deleted = false;
        ArrayList arr=new ArrayList<>();

        try{
            BufferedReader dr = new BufferedReader(new FileReader("Device.txt"));
            while((data = dr.readLine())!=null){
                if(data.equals("")){
                    continue;
                }
                else{
                    String[] sData = data.split(",");
                    if(sData[0].equals(deviceID)){
                        deleted = true;
                        continue;
                    }
                    else{
                        int DeviceID = Integer.valueOf(sData[0]);
                        String deviceName = sData[1];
                        String price = sData[2];
                        int qnty = Integer.valueOf(sData[3]);
                        String Category = sData[4];

                        device dk =new device(DeviceID,deviceName,price,qnty,Category);
                        arr.add(dk.Print());

                    }
                }
            }
            if(deleted){
                BufferedWriter dw;
                dw =new BufferedWriter(new FileWriter("Device.txt"));
                dw.write("");
                dw.close();
                int i = 0;
                while(i<arr.size()){
                    String line =String.valueOf(arr.get(i));
                    dw =new BufferedWriter(new FileWriter("Device.txt",true));
                    dw.append("\n"+line);
                    dw.close();
                    i++;
                }
                add();
            }
            else{
                JOptionPane.showMessageDialog(null, "Not Found!");
            }
        }
        catch(IOException e){
            System.out.print(e.getMessage());
        }
    }
    public boolean checked(){
        if(txtdeviceID.getText().equals("")){
            return false;
        }
        if(txtdeviceName.getText().equals("")){
            return false;
        }
             
        if(txtPrice.getText().equals("")){
            return false;
        }
        if(txtqnty.getText().equals("")){
            return false;
        }

        else{
            return true;
        }
    }
    public boolean check(){
        try{
            int deviceId = Integer.valueOf(txtdeviceID.getText());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"Deevice ID must be an Integer!");
            return false;
        }
        try{
            int deviceqnty = Integer.valueOf(txtqnty.getText());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,"Quintity must be an Integer!");
            return false;
        }
             
        return true;
    }

}
